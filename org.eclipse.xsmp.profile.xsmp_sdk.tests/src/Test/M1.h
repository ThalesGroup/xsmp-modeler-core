// Copyright (C) 2023 THALES ALENIA SPACE FRANCE.
// 
// All rights reserved. This program and the accompanying materials
// are made available under the terms of the Eclipse Public License 2.0
// which accompanies this distribution, and is available at
// https://www.eclipse.org/legal/epl-2.0/
// 
// SPDX-License-Identifier: EPL-2.0

// -----------------------------------------------------------------------------
// File Name    : M1.h
// Generated by : XsmpSdkGenerator-1.1.0.202308311156
// -----------------------------------------------------------------------------
/// @file Test/M1.h

#ifndef TEST_M1_H_
#define TEST_M1_H_

// Include the generated header file
#include "Test/M1Gen.h"

// ----------------------------------------------------------------------------
// ------------------------ Types and Interfaces ------------------------
// ----------------------------------------------------------------------------

namespace Test {
class M1: public M1Gen {
public:
    /// Re-use parent constructors
    using M1Gen::M1Gen;

    /// Virtual destructor to release memory.
    ~M1() noexcept override = default;

private:
    // visibility to call DoPublish/DoConfigure/DoConnect/DoDisconnect
    friend class ::Xsmp::Component::Helper;

    /// Publish fields, operations and properties of the model.
    /// @param receiver Publication receiver.
    void DoPublish(::Smp::IPublication *receiver);

    /// Request for configuration.
    /// @param logger Logger to use for log messages during Configure().
    /// @param linkRegistry Link Registry to use for registration of
    ///         links created during Configure() or later.
    void DoConfigure(::Smp::Services::ILogger *logger,
            ::Smp::Services::ILinkRegistry *linkRegistry);

    /// Connect model to simulator.
    /// @param simulator Simulation Environment that hosts the model.
    ///
    void DoConnect(::Smp::ISimulator *simulator);

    /// Disconnect model to simulator.
    /// @throws Smp::InvalidComponentState
    void DoDisconnect();

public:
    virtual void _ep1() override;
};
} // namespace Test

#endif // TEST_M1_H_
