plugins {
  id 'io.github.rkotkiewicz.template' version '1.0.0'
}

dependencies {
	api "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
    api 'commons-cli:commons-cli:1.9.0'
    api project(':plugins:org.eclipse.xsmp.lib')
}
configurations {
	mwe2 {
		extendsFrom compileClasspath
	}
}

dependencies {
	mwe2 'org.eclipse.emf:org.eclipse.emf.mwe2.launch'
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 'org.eclipse.xtext:xtext-antlr-generator'
}

task generateXtextLanguage(type: JavaExec) {
	mainClass = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/org/eclipse/xsmp/GenerateXsmp.mwe2"
	inputs.file "src/org/eclipse/xsmp/Xsmpcore.xtext"
    inputs.file "src/org/eclipse/xsmp/Xsmpcat.xtext"
	outputs.dir "src-gen"
	args += "src/org/eclipse/xsmp/GenerateXsmp.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

processResources.dependsOn(generateXtextLanguage)
generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]


template {
  create("version") {
    from.set(file("$projectDir/src-templates"))
    into.set(file("$projectDir/src-gen"))
    binding([version: "${version}"])
  }
}

fillVersionTemplate.dependsOn(generateXtextLanguage)
compileJava.dependsOn(fillVersionTemplate)
processResources.dependsOn(fillVersionTemplate)

//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false
