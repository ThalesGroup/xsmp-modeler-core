<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="catalogue" nsURI="http://www.ecss.nl/smp/2019/Smdl/Catalogue"
    nsPrefix="Catalogue">
  <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
    <details key="documentation" value="This schema defines all metamodel elements that are needed in order to define models in a catalogue. Catalogues make use of the mechanisms defined in Core Types, e.g. enumerations and structures, and they add reference types (interfaces and components), events and a hierarchical grouping mechanism (namespaces).&#xA;&#xA;This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.&#xA;&#xA;UML Model Information:&#xA;    UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.smdl.xmi&#xA;    UML model name:  Obsolete&#xA;    UML metamodel:   http://schema.omg.org/spec/UML/2.2&#xA;    XMI version:     2.1&#xA;    XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier&#xA;&#xA;XSLT Processing Information:&#xA;    Processing date: 2019-10-28T17:05:22.729+01:00&#xA;    XSLT processor:  SAXON 8.8.0.7 from Saxonica&#xA;    XSLT version:    2.0&#xA;    XSLT stylesheet: xmi-to-xsd.xslt&#xA;      &#xA;This schema defines base metaclasses and annotation mechanisms used throughout the SMP Metamodel.&#xA;&#xA;This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.&#xA;&#xA;UML Model Information:&#xA;    UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.core.xmi&#xA;    UML model name:  Obsolete&#xA;    UML metamodel:   http://schema.omg.org/spec/UML/2.2&#xA;    XMI version:     2.1&#xA;    XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier&#xA;&#xA;XSLT Processing Information:&#xA;    Processing date: 2019-10-28T16:29:39.084+01:00&#xA;    XSLT processor:  SAXON 8.8.0.7 from Saxonica&#xA;    XSLT version:    2.0&#xA;    XSLT stylesheet: xmi-to-xsd.xslt&#xA;      &#xA;&#xA;      This schema document provides attribute declarations and attribute group, complex type and simple type definitions which can be used in the construction of user schemas to define the structure of particular linking constructs, e.g.&#xA;      &lt; xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xl=&quot;http://www.w3.org/1999/xlink&quot;> &lt;xs:import namespace=&quot;http://www.w3.org/1999/xlink&quot; location=&quot;http://www.w3.org/1999/xlink.xsd&quot;> &lt;xs:element name=&quot;mySimple&quot;> &lt;xs:complexType> ... &lt;xs:attributeGroup ref=&quot;xl:simpleAttrs&quot;/> ... &lt;/xs:complexType> &lt;/xs:element> ...&lt; /xs:schema>&#xA;    &#xA;&#xA;     &#xA;  &lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;        &#xA;    &lt;h1>About the XML namespace&lt;/h1>&#xA;        &#xA;    &lt;div class=&quot;bodytext&quot;>&#xA;           &#xA;      &lt;p>&#xA;      This schema document describes the XML namespace, in a form&#xA;      suitable for import by other schema documents.&#xA;     &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;              See &#xA;        &lt;a href=&quot;http://www.w3.org/XML/1998/namespace.html&quot;>&#xA;      http://www.w3.org/XML/1998/namespace.html&lt;/a>&#xA;         and&#xA;      &#xA;        &lt;a href=&quot;http://www.w3.org/TR/REC-xml&quot;>&#xA;      http://www.w3.org/TR/REC-xml&lt;/a>&#xA;         for information &#xA;      about this namespace.&#xA;     &#xA;      &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;      Note that local names in this namespace are intended to be&#xA;      defined only by the World Wide Web Consortium or its subgroups.&#xA;      The names currently defined in this namespace are listed below.&#xA;      They should not be used with conflicting semantics by any Working&#xA;      Group, specification, or document instance.&#xA;     &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;           &#xA;      See further below in this document for more information about &#xA;        &lt;a href=&quot;#usage&quot;>how to refer to this schema document from your own&#xA;      XSD schema documents&lt;/a>&#xA;         and about &#xA;        &lt;a href=&quot;#nsversioning&quot;>the&#xA;      namespace-versioning policy governing this schema document&lt;/a>&#xA;        .&#xA;     &#xA;      &lt;/p>&#xA;          &#xA;    &lt;/div>&#xA;       &#xA;  &lt;/div>&#xA;    &#xA;&#xA;&#xA;     &#xA;  &lt;div xmlns=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;       &#xA;    &#xA;    &lt;h3>Father (in any context at all)&lt;/h3>&#xA;     &#xA;&#xA;    &#xA;    &lt;div class=&quot;bodytext&quot;>&#xA;           &#xA;      &lt;p>&#xA;      denotes Jon Bosak, the chair of &#xA;      the original XML Working Group.  This name is reserved by &#xA;      the following decision of the W3C XML Plenary and &#xA;      XML Coordination groups:&#xA;     &lt;/p>&#xA;           &#xA;      &lt;blockquote>&#xA;               &#xA;        &lt;p>&#xA;&#x9;In appreciation for his vision, leadership and&#xA;&#x9;dedication the W3C XML Plenary on this 10th day of&#xA;&#x9;February, 2000, reserves for Jon Bosak in perpetuity&#xA;&#x9;the XML name &quot;xml:Father&quot;.&#xA;       &lt;/p>&#xA;             &#xA;      &lt;/blockquote>&#xA;          &#xA;    &lt;/div>&#xA;       &#xA;  &lt;/div>&#xA;    &#xA;&#xA;&#xA;     &#xA;  &lt;div id=&quot;usage&quot; xml:id=&quot;usage&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;        &#xA;    &lt;h2>&#xA;      &lt;a name=&quot;usage&quot;>About this schema document&lt;/a>&#xA;    &lt;/h2>&#xA;        &#xA;    &lt;div class=&quot;bodytext&quot;>&#xA;           &#xA;      &lt;p>&#xA;              This schema defines attributes and an attribute group suitable&#xA;      for use by schemas wishing to allow &#xA;        &lt;code>xml:base&lt;/code>&#xA;        ,&#xA;      &#xA;        &lt;code>xml:lang&lt;/code>&#xA;        , &#xA;        &lt;code>xml:space&lt;/code>&#xA;         or&#xA;      &#xA;        &lt;code>xml:id&lt;/code>&#xA;         attributes on elements they define.&#xA;     &#xA;      &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;      To enable this, such a schema must import this schema for&#xA;      the XML namespace, e.g. as follows:&#xA;     &lt;/p>&#xA;           &#xA;      &lt;pre>&#xA;          &amp;lt;schema . . .&amp;gt;&#xA;           . . .&#xA;           &amp;lt;import namespace=&quot;http://www.w3.org/XML/1998/namespace&quot;&#xA;                      schemaLocation=&quot;http://www.w3.org/2001/xml.xsd&quot;/&amp;gt;&#xA;     &lt;/pre>&#xA;           &#xA;      &lt;p>&#xA;      or&#xA;     &lt;/p>&#xA;           &#xA;      &lt;pre>&#xA;           &amp;lt;import namespace=&quot;http://www.w3.org/XML/1998/namespace&quot;&#xA;                      schemaLocation=&quot;http://www.w3.org/2009/01/xml.xsd&quot;/&amp;gt;&#xA;     &lt;/pre>&#xA;           &#xA;      &lt;p>&#xA;      Subsequently, qualified reference to any of the attributes or the&#xA;      group defined below will have the desired effect, e.g.&#xA;     &lt;/p>&#xA;           &#xA;      &lt;pre>&#xA;          &amp;lt;type . . .&amp;gt;&#xA;           . . .&#xA;           &amp;lt;attributeGroup ref=&quot;xml:specialAttrs&quot;/&amp;gt;&#xA;     &lt;/pre>&#xA;           &#xA;      &lt;p>&#xA;      will define a type which will schema-validate an instance element&#xA;      with any of those attributes.&#xA;     &lt;/p>&#xA;          &#xA;    &lt;/div>&#xA;       &#xA;  &lt;/div>&#xA;    &#xA;&#xA;&#xA;     &#xA;  &lt;div id=&quot;nsversioning&quot; xml:id=&quot;nsversioning&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;        &#xA;    &lt;h2>&#xA;      &lt;a name=&quot;nsversioning&quot;>Versioning policy for this schema document&lt;/a>&#xA;    &lt;/h2>&#xA;        &#xA;    &lt;div class=&quot;bodytext&quot;>&#xA;           &#xA;      &lt;p>&#xA;              In keeping with the XML Schema WG's standard versioning&#xA;      policy, this schema document will persist at&#xA;      &#xA;        &lt;a href=&quot;http://www.w3.org/2009/01/xml.xsd&quot;>&#xA;       http://www.w3.org/2009/01/xml.xsd&lt;/a>&#xA;        .&#xA;     &#xA;      &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;              At the date of issue it can also be found at&#xA;      &#xA;        &lt;a href=&quot;http://www.w3.org/2001/xml.xsd&quot;>&#xA;       http://www.w3.org/2001/xml.xsd&lt;/a>&#xA;        .&#xA;     &#xA;      &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;              The schema document at that URI may however change in the future,&#xA;      in order to remain compatible with the latest version of XML&#xA;      Schema itself, or with the XML namespace itself.  In other words,&#xA;      if the XML Schema or XML namespaces change, the version of this&#xA;      document at &#xA;        &lt;a href=&quot;http://www.w3.org/2001/xml.xsd&quot;>&#xA;       http://www.w3.org/2001/xml.xsd &#xA;      &lt;/a>&#xA;         &#xA;      will change accordingly; the version at &#xA;      &#xA;        &lt;a href=&quot;http://www.w3.org/2009/01/xml.xsd&quot;>&#xA;       http://www.w3.org/2009/01/xml.xsd &#xA;      &lt;/a>&#xA;         &#xA;      will not change.&#xA;     &#xA;      &lt;/p>&#xA;           &#xA;      &lt;p>&#xA;      Previous dated (and unchanging) versions of this schema &#xA;      document are at:&#xA;     &lt;/p>&#xA;           &#xA;      &lt;ul>&#xA;              &#xA;        &lt;li>&#xA;          &lt;a href=&quot;http://www.w3.org/2009/01/xml.xsd&quot;>&#xA;&#x9;http://www.w3.org/2009/01/xml.xsd&lt;/a>&#xA;        &lt;/li>&#xA;              &#xA;        &lt;li>&#xA;          &lt;a href=&quot;http://www.w3.org/2007/08/xml.xsd&quot;>&#xA;&#x9;http://www.w3.org/2007/08/xml.xsd&lt;/a>&#xA;        &lt;/li>&#xA;              &#xA;        &lt;li>&#xA;          &lt;a href=&quot;http://www.w3.org/2004/10/xml.xsd&quot;>&#xA;&#x9;http://www.w3.org/2004/10/xml.xsd&lt;/a>&#xA;        &lt;/li>&#xA;              &#xA;        &lt;li>&#xA;          &lt;a href=&quot;http://www.w3.org/2001/03/xml.xsd&quot;>&#xA;&#x9;http://www.w3.org/2001/03/xml.xsd&lt;/a>&#xA;        &lt;/li>&#xA;             &#xA;      &lt;/ul>&#xA;          &#xA;    &lt;/div>&#xA;       &#xA;  &lt;/div>&#xA;    &#xA;&#xA;This schema provides basic types and typing mechanisms, together with appropriate value specification mechanisms.&#xA;&#xA;This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.&#xA;&#xA;UML Model Information:&#xA;    UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.core.xmi&#xA;    UML model name:  Obsolete&#xA;    UML metamodel:   http://schema.omg.org/spec/UML/2.2&#xA;    XMI version:     2.1&#xA;    XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier&#xA;&#xA;XSLT Processing Information:&#xA;    Processing date: 2019-10-28T16:29:39.084+01:00&#xA;    XSLT processor:  SAXON 8.8.0.7 from Saxonica&#xA;    XSLT version:    2.0&#xA;    XSLT stylesheet: xmi-to-xsd.xslt&#xA;      "/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="Catalogue" eSuperTypes="elements.ecore#//Document">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Catalogue is a document that defines types. It contains namespaces as a primary ordering mechanism. The names of these namespaces need to be unique within the catalogue."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Catalogue"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" upperBound="-1"
        eType="#//Namespace" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of namespaces of the catalogue."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Namespace"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CatalogueDocumentRoot">
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Catalogue"/>
      <details key="kind" value="mixed"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="mixed" unique="false" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EFeatureMapEntry">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="elementWildcard"/>
        <details key="name" value=":mixed"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="xMLNSPrefixMap" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStringToStringMapEntry"
        transient="true" containment="true" resolveProxies="false">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="xmlns:prefix"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="xSISchemaLocation" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EStringToStringMapEntry"
        transient="true" containment="true" resolveProxies="false">
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="xsi:schemaLocation"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="catalogue" upperBound="-2"
        eType="#//Catalogue" volatile="true" transient="true" derived="true" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The Catalogue element (of type Catalogue) is the root element of an SMDL catalogue."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Catalogue"/>
        <details key="namespace" value="##targetNamespace"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Component" abstract="true" eSuperTypes="#//ReferenceType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&#xA;              &#xA;  &lt;xhtml:p xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;     A Component is a reference type and hence inherits the ability to hold constants, properties and operations. As a Component semantically forms a deployable unit, it may use the available object and component mechanisms of the standard. Apart from the ability to specify a Base component (single implementation inheritance), a component may have various optional elements: &#xA;    &lt;xhtml:ul>&#xA;                        &#xA;      &lt;xhtml:li> Interface links specify interfaces that the component provides (in SMP this implies that the component implements these interfaces); &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> EntryPoint elements allow the component to be scheduled (via the Scheduler service) and to listen to global events (via the EventManager service); &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> EventSink elements specify which events the component can receive (these may be registered with other components' event sources); &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> EventSource elements specify events that the component can emit (other components may register their associated event sink(s) with these); &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Field elements define a component's internal state; and &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Association elements express associations to other components or fields of other components. &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Container elements define containment of other components (composition). &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Reference elements define reference to other components (aggregation). &lt;/xhtml:li>&#xA;                     &#xA;    &lt;/xhtml:ul>&#xA;                &#xA;  &lt;/xhtml:p>&#xA;           &#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Component"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Base component, which is optional.&#xA;Link destination type: Catalogue:Component"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:Component"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Base"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//Component"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interface" upperBound="-1"
        containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of provided interfaces.&#xA;Link destination type: Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Interface"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//Interface"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="entryPoint" upperBound="-1"
        eType="#//EntryPoint" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of entry points."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="EntryPoint"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="eventSink" upperBound="-1"
        eType="#//EventSink" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of event sinks."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="EventSink"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="eventSource" upperBound="-1"
        eType="#//EventSource" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of event sources."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="EventSource"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="field" upperBound="-1"
        eType="ecore:EClass types.ecore#//Field" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of fields."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Field"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="association" upperBound="-1"
        eType="ecore:EClass types.ecore#//Association" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of associations."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Association"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" upperBound="-1"
        eType="#//Container" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of containers."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Container"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="reference" upperBound="-1"
        eType="#//Reference" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of references."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Reference"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Container" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Container defines the rules of composition (containment of children) for a Component.&#xA;The type of components that can be contained is specified via the Type link.&#xA;The Lower and Upper attributes specify the multiplicity, i.e. the number of possibly stored components. Therein the upper bound may be unlimited, which is represented by Upper=-1. &#xA;Furthermore, a container may specify a default implementation of the container type via the DefaultComponentl link.&#xA;&#xA;              &#xA;  &lt;xhtml:p xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;                   &#xA;    &lt;xhtml:b>&#xA;                        &#xA;      &lt;xhtml:i> Remark &lt;/xhtml:i>&#xA;                     &#xA;    &lt;/xhtml:b>&#xA;     : SMDL support tools may use this during instantiation (i.e. during model integration) to select an initial implementation for newly created contained components. &#xA;  &lt;/xhtml:p>&#xA;           &#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Container"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type that all components in this container have to be of, or be derived of.&#xA;Link destination type: Catalogue:ReferenceType"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:ReferenceType"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Type"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//ReferenceType"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="defaultComponent" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Default component for a child of the container.&#xA;Link destination type: Catalogue:Component"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:Component"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="DefaultComponent"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//Component"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Long"
        defaultValueLiteral="1" unsettable="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Lower limit of components in the container."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="Lower"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Long"
        defaultValueLiteral="1" unsettable="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Upper limit of components in the container."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="Upper"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EntryPoint" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An EntryPoint is a named element of a Component (Model or Service). It corresponds to a void operation taking no parameters that can be called from an external client (e.g. the Scheduler or Event Manager services). An Entry Point can reference both Input fields (which must have their Input attribute set to true) and Output fields (which must have their Output attribute set to true). These links can be used to ensure that all component output fields are updated before the entry point is called, or that all input fields can be used after the entry point has been called."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="EntryPoint"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="input" upperBound="-1"
        containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of input fields of components that are updated by calls to this entry point, and hence can be used after calling the entry point.&#xA;Link destination type: Types:Field"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Types:Field"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Input"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="ecore:EClass types.ecore#//Field"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="output" upperBound="-1"
        containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of output fields of components that are read during calls to this entry point, and hence have to be updated prior to calling the entry point.&#xA;Link destination type: Types:Field"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Types:Field"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Output"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="ecore:EClass types.ecore#//Field"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EventSink" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An EventSink is used to specify that a Component can receive a specific event using a given name. An EventSink can be connected to any number of EventSource instances."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="EventSink"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type of the event.&#xA;Link destination type: Catalogue:EventType"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:EventType"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Type"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//EventType"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EventSource" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An EventSource is used to specify that a Component publishes a specific event under a given name. The Multicast attribute can be used to specify whether any number of sinks can connect to the source (the default), or only a single sink can connect (Multicast=false).&#xA;&#xA;              &#xA;  &lt;xhtml:p xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;                   &#xA;    &lt;xhtml:b>&#xA;                        &#xA;      &lt;xhtml:i> Remark &lt;/xhtml:i>&#xA;                     &#xA;    &lt;/xhtml:b>&#xA;     : A tool for model integration can use the Multicast attribute to configure the user interface accordingly to ease the specification of event links. &#xA;  &lt;/xhtml:p>&#xA;           &#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="EventSource"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" lowerBound="1" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type of the event.&#xA;Link destination type: Catalogue:EventType"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:EventType"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Type"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//EventType"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="multicast" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Boolean"
        defaultValueLiteral="true" unsettable="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="True if the event source supports multi-cast, false otherwise."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="Multicast"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EventType" eSuperTypes="types.ecore#//Type">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An EventType is used to specify the type of an event. This can be used not only to give a meaningful name to an event type, but also to link it to an existing simple type (via the EventArgs attribute) that is passed as an argument with every invocation of the event."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="EventType"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="eventArgs" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Type of the event argument, or none for a void event.&#xA;Link destination type: Types:SimpleType"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Types:SimpleType"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="EventArgs"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="ecore:EClass types.ecore#//SimpleType"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Interface" eSuperTypes="#//ReferenceType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="An Interface is a reference type that serves as a contract in a loosely coupled architecture. It has the ability to contain constants, properties and operations (from ReferenceType). An Interface may inherit from other interfaces (interface inheritance), which is represented via the Base links.&#xA;&#xA;              &#xA;  &lt;xhtml:p xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;                   &#xA;    &lt;xhtml:i>&#xA;                        &#xA;      &lt;xhtml:b> Remark &lt;/xhtml:b>&#xA;                     &#xA;    &lt;/xhtml:i>&#xA;     : It is strongly recommended to only use value types, references and other interfaces in the properties and operations of an interface (i.e. not to use models). Otherwise, a dependency between a model implementing the interface, and other models referenced by this interface is introduced, which is against the idea of interface-based or component-based design. &#xA;  &lt;/xhtml:p>&#xA;           &#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Interface"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="base" upperBound="-1" containment="true"
        resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of base interfaces.&#xA;Link destination type: Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Base"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//Interface"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Model" eSuperTypes="#//Component">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The Model metaclass is a component and hence inherits all component mechanisms.&#xA;These mechanisms allow using various different modelling approaches.&#xA;For a class-based design, a Model may provide a collection of Field elements to define its internal state. For scheduling and global events, a Model may provide a collection of EntryPoint elements that can be registered with the Scheduler or EventManager services of a Simulation Environment.&#xA;For an interface-based design, a Model may provide (i.e. implement) an arbitrary number of interfaces, which is represented via the Interface links.&#xA;For a component-based design, a Model may provide Container elements to contain other models (composition), and Reference elements to reference other components (aggregation). These components can either be models or services.&#xA;For an event-based design, a Model may support inter-model events via the EventSink and EventSource elements.&#xA;For a dataflow-based design, the fields of a Model can be tagged as Input or Output fields.&#xA;In addition, a Model may have Association elements to express associations to other models or fields of other models."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Model"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Namespace" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Namespace is a primary ordering mechanism. A namespace may contain other namespaces (nested namespaces), and does typically contain types. In SMDL, namespaces are contained within a Catalogue (either directly, or within another namespace in a catalogue).&#xA;All sub-elements of a namespace (namespaces and types) must have unique names."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Namespace"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" upperBound="-1"
        eType="#//Namespace" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of nested namespaces of the namespace."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Namespace"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" upperBound="-1" eType="ecore:EClass types.ecore#//Type"
        containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of types defined within the namespace."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Type"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Reference" eSuperTypes="elements.ecore#//NamedElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A Reference defines the rules of aggregation (links to components) for a Component.&#xA;The type of components (models or services) that can be referenced is specified by the Interface link. Thereby, a service reference is characterized by an interface that is derived from Smp::IService.&#xA;The Lower and Upper attributes specify the multiplicity, i.e. the number of possibly held references to components implementing this interface. Therein the upper bound may be unlimited, which is represented by Upper=-1."/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Reference"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="interface" lowerBound="1"
        containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Interface that all components linked to from this reference have to implement.&#xA;Link destination type: Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http://www.w3.org/1999/xlink">
        <details key="appinfo" value="Catalogue:Interface"/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Interface"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EClass types.ecore#//ElementReference">
        <eTypeArguments eClassifier="#//Interface"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Long"
        defaultValueLiteral="1" unsettable="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Lower limit of component links in the reference."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="Lower"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="ecore:EDataType http://www.eclipse.org/emf/2003/XMLType#//Long"
        defaultValueLiteral="1" unsettable="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Upper limit of component links in the reference."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="attribute"/>
        <details key="name" value="Upper"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferenceType" abstract="true" eSuperTypes="types.ecore#//LanguageType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="&#xA;              &#xA;  &lt;xhtml:p xmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;>&#xA;     ReferenceType serves as an abstract base metaclass for Interface and Component. An instance of a ReferenceType is identified by a reference to it - as opposed to an instance of a ValueType which is identified by its value. A reference type may have various optional elements: &#xA;    &lt;xhtml:ul>&#xA;                        &#xA;      &lt;xhtml:li> Constant elements specify constants defined in the reference type's name scope; &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Property elements specify the reference type's properties; and &lt;/xhtml:li>&#xA;                        &#xA;      &lt;xhtml:li> Operation elements specify the reference type's operations. &lt;/xhtml:li>&#xA;                     &#xA;    &lt;/xhtml:ul>&#xA;                &#xA;  &lt;/xhtml:p>&#xA;           &#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="ReferenceType"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constant" upperBound="-1"
        eType="ecore:EClass types.ecore#//Constant" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of constants."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Constant"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="property" upperBound="-1"
        eType="ecore:EClass types.ecore#//Property" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of properties."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Property"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="operation" upperBound="-1"
        eType="ecore:EClass types.ecore#//Operation" containment="true" resolveProxies="false">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Collection of operations."/>
      </eAnnotations>
      <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
        <details key="kind" value="element"/>
        <details key="name" value="Operation"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Service" eSuperTypes="#//Component">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="The Service metaclass is a component and hence inherits all component mechanisms. A Service can reference one or more interfaces via the Interface links (inherited from Component), where at least one of them must be derived from Smp::IService, which qualifies it as a service interface.&#xA;"/>
    </eAnnotations>
    <eAnnotations source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData">
      <details key="name" value="Service"/>
      <details key="kind" value="elementOnly"/>
    </eAnnotations>
  </eClassifiers>
</ecore:EPackage>
