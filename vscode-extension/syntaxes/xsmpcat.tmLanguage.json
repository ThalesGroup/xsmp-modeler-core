{
	"scopeName": "source.xsmpcat",
	"patterns": [
		{
			"match": "\\b(catalogue|model|struct|exception|container|constant|def|integer|float|eventsink|eventsource|reference|entrypoint|property|using|enum|field|service|namespace|array|native|attribute|event|class|string|primitive|association|interface|public|private|protected|abstract|input|output|transient|writeOnly|readOnly|readWrite|implements|extends|throws|get|set|in|out|inout)\\b",
			"name": "keyword.control.xsmp.catalogue"
		},
		{
			"match": "\\b(true|false|nullptr)\\b",
			"name": "constant.language.xsmp.catalogue"
		},
		{
			"match": "\\b([a-zA-Z]\\w*)\\b",
			"name": "entity.name.type.xsmp.catalogue"
		},
		{
			"match": "\\b(void)\\b",
			"name": "storage.type.primitive.xsmp.catalogue"
		},
		{
			"name": "comment.line.double-dash.xsmp.catalogue",
			"begin": "(^[ \\t]+)?(?=//)",
			"end": "(?=$)"
		},
		{
			"name": "comment.block.documentation.xsmp.catalogue",
			"match": "/\\*\\*\\*/"
		},
		{
			"name": "comment.block.documentation.xsmp.catalogue",
			"begin": "/\\*\\*[^\\*\\/]",
			"end": "\\*/",
			"patterns": [
				{
					"match": "@[^\\s]+",
					"name": "comment.block.documentation.tag.xsmp.catalogue"
				}
			]
		},
		{
			"name": "comment.block.xsmp.catalogue",
			"match": "/\\*(?:\\*\\*+)?\\*/"
		},
		{
			"name": "comment.block.xsmp.catalogue",
			"begin": "/\\*(?:[^\\*]|\\*\\*)",
			"end": "\\*/"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#characters"
		}
	],
	"repository": {
		"strings": {
			"begin": "\"",
			"end": "\"",
			"name": "string.quoted.double.xsmpcat",
			"patterns": [
				{
					"match": "\\\\(u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]+|[^\"\\\\])",
					"name": "constant.character.escape.xsmp.catalogue"
				}
			]
		},
		"numbers": {
			"match": "\\b(0b[01]+|0x[0-9A-Fa-f]+|[0-9]+(\\.[0-9]+)?([eE][+-]?[0-9]+)?([uU][lL]?|[lL][uU]?|ns|us|ms|s|mn|h|d|y|[fF])?)\\b",
			"name": "constant.numeric.xsmp.catalogue"
		},
		"characters": {
			"begin": "'",
			"end": "'",
			"name": "string.quoted.single.xsmp.catalogue",
			"patterns": [
				{
					"match": "\\\\(u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]+|[^'\\\\])",
					"name": "constant.character.escape.xsmp.catalogue"
				}
			]
		}
	}
}